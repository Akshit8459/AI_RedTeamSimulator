# exploit_fetcher.py
import csv
import os
import difflib

EXPLOIT_DB_PATH = "files_exploits.csv"  # Download from Exploit-DB GitHub

def fetch_exploits_for_technique(technique_name, max_results=5, similarity_threshold=0.6):
    """
    Search Exploit-DB for entries matching the technique name using fuzzy matching.
    """
    if not os.path.exists(EXPLOIT_DB_PATH):
        raise FileNotFoundError(f"{EXPLOIT_DB_PATH} not found. Please download from Exploit-DB GitHub.")

    matches = []

    with open(EXPLOIT_DB_PATH, encoding='utf-8', errors='ignore') as csvfile:
        reader = csv.DictReader(csvfile)
        for row in reader:
            description = row.get("description", "")
            if description:
                ratio = difflib.SequenceMatcher(None, technique_name.lower(), description.lower()).ratio()
                if ratio >= similarity_threshold:
                    matches.append({
                        "title": row["title"],
                        "url": row["url"],
                        "description": description
                    })
            if len(matches) >= max_results:
                break

    return matches
